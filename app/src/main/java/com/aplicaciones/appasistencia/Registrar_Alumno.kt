package com.aplicaciones.appasistencia

import android.content.Intent
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.aplicaciones.appasistencia.Datos.DatAlumno
import com.aplicaciones.appasistencia.Entidad.Alumno
import java.text.SimpleDateFormat
import java.util.*

class Registrar_Alumno : AppCompatActivity() {
    private lateinit var etNombre: EditText
    private lateinit var etApellido: EditText
    private lateinit var etCorreo: EditText
    private lateinit var etContraseña: EditText
    private lateinit var etTelefono: EditText
    private lateinit var btnRegistrar: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_registrar_alumno)

        // Inicializar los campos de la interfaz
        etNombre = findViewById(R.id.etNombre)
        etApellido = findViewById(R.id.etApellido)
        etCorreo = findViewById(R.id.etCorreo)
        etContraseña = findViewById(R.id.etContraseña)
        etTelefono = findViewById(R.id.etTelefono)
        btnRegistrar = findViewById(R.id.btnRegistrar)

        // Configurar el botón de registro
        btnRegistrar.setOnClickListener {
            // Obtener los valores de los EditText
            val nombre = etNombre.text.toString()
            val apellido = etApellido.text.toString()
            val correo = etCorreo.text.toString()
            val contraseña = etContraseña.text.toString()
            val telefono = etTelefono.text.toString()
            val imageResourceId = R.drawable.fotodefecto

            // Validar los campos
            if (nombre.isEmpty() || apellido.isEmpty() || correo.isEmpty() || contraseña.isEmpty()  || telefono.isEmpty()) {
                Toast.makeText(this, "Por favor, rellene todos los campos", Toast.LENGTH_SHORT).show()
            } else {
                // Crear un objeto Alumno con valores predeterminados para 'id' y 'fechaRegistro'
                val currentDate = SimpleDateFormat("yyyy-MM-dd", Locale.getDefault()).format(Date()) // Obtener la fecha actual
                val alumno = Alumno(
                    id = 0,  // Asumimos que el id será autogenerado
                    nombre = nombre,
                    apellido = apellido,
                    correo = correo,
                    contraseña = contraseña,
                    telefono = telefono,
                    fechaRegistro = currentDate,
                    foto = "/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAIQAABtbnRyUkdC IFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAA AADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlk ZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAA AChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAA AAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAA AAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3Bh cmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADT LW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAw ADEANv/bAEMABgQFBgUEBgYFBgcHBggKEAoKCQkKFA4PDBAXFBgYFxQWFhodJR8aGyMcFhYgLCAj JicpKikZHy0wLSgwJSgpKP/bAEMBBwcHCggKEwoKEygaFhooKCgoKCgoKCgoKCgoKCgoKCgoKCgo KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKP/AABEIAyADIAMBIgACEQEDEQH/xAAcAAEAAQUB AQAAAAAAAAAAAAAAAQIDBAUGBwj/xAA+EAEAAQMCBAQDBAgGAQUBAAAAAQIDEQQhBRIxQQYTUWEi MnGRocHRFCMzQlJygfBDgpKiseEVJFNUYvFz/8QAFAEBAAAAAAAAAAAAAAAAAAAAAP/EABQRAQAA AAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/APqkgADIAZAAJmI6gCnzKPX7jzKfUFQp8 yn1PMo9fuBUETE9AADIAAATOOqOaASGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnoEziMyB23Rt6lWMTM9I3a3V8Y0el/a1xG+Pln8gbC3TE RtkuXIo+auin+acOS1fimmqJizZmNp6XJj8Gj1PFNVqa5nzb1EenmzIPQLnEtHaz5mqsRVHWnzKc /wDLX6jxNobUbeZXP/05Z/Fw03J/xc3J/jqnMyoqqoqjbET9Adbe8XW5x+j2Lvv5lH/GKmDqPE1+ 50s0f6Z/Nz1MTGfimTf1kGxvcX1F7aq3biM5+WfzWK9demPlt/ZLFjrvVKfh9fuBcq1N6raYt4n2 lRzV+tBmPVGPYE81frQrp1N6naIt4j2lbx7JzHqDIo116I+W39kr9ni+os7U27cxnPyz+bX/AA+v 3InrtVIOh0/ia/b62aP9M/mzbXiyic+fYue3JR/zmpyO/rKK4q2xVMf1B32n8SaK5G/PR/Pyx+LP t6/Q3ccursZnt5lOf+XmdM467z7rlFVcVRNETT7xPQHqVqu3V+zrpq+kxKuZw820/FdVpq4mKrtU f/1mG50nieIx50V9I61zP4A7Db1Po12l4xo9V+yrzvj5Z/JsKcYiY6SCqN43CJzGYAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAET198JRVOOnUEfFH/4 VbzHw/8AS3f1FNi3zVxVP0clxPxPf8zk01FNMdJmqJie3pIOsu6m1p/21+3T7VVRDm+J+JaqYqo0 kU57VU1xV6ezl9brr1+vnv3bszPaKpx96zRE10TVbnER69QZmt4pq9TGLkzj+WPyYdHXNZ8UdZR1 BIAAAAAAAAAAAAAAAAAAAFfXNDM0XFNXpoxbmcfyx+TC6J+Kekg67hniaa+W3qqaYq71VVxT69sO js6i3f8A2V+3V7UzEvLa8005rx9Y6snRay/pq+ezfu7b4mucT9gPTqdpqxTj8U/FP/447hnim9Nz y9TRTMdImmJz39ZdbY1FN+3zURVH1Bdjr74Simc9eqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAADIQBlTXVjomaojq1+u4ppdB+1uRM1T0iY2+/2Bm3b1Nm3Ndza I/q53ivii3Zny9LHNVNOYqzMY69pho+M8Zu6+Z8u3T5Xryznt7+zT2rlMfJEzAMrX6/U66qfPrzT mZxiO/0hjxiKYilTcqqq7fcmMYjHUExVMdEZ+KKu8ABO/VEREdEgAAAAAAAAAAAAAAAAAAAAImIn qmNugAZ3z3TndACZmKqcV7wyNBr9Toao8ivFOYnGI7fWGNOMTnqi3VVT2+4HZ8K8UW70+XqacVxT mas5z07RDo7N6m7b56N4eUX6+eOk9W64Nxurh8RF+ink9Yj6+s+4PQKaoqjZOWv0HFdNr4mbNcZi ekzHt7+7PiqJ6AnISAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIzPp sTGYTnfAEqYznbdTeqoot1VVzTEREzmZw5LjnHrtVM6fTRERmY5qZirpMY7A2PFuO2tJcmi3T5te J2zNO+Ix2cZrL9zVai5cuzV8VU1RRVVzcuZ6f0WeaaauWfiqnbm/6Pr1Aomadszy+nZVXNMxiiiK I9lIBTOPdERiZn1SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiYzMT6JqnPsAKqJiI+KmKvqpnefi+KP SQBe02ouabUWrlmaqYoriqaKauWK8T0n6uz4Tx6xq7kUXI8qvHTM1b4nPZw0bz6JiaZq5YxTVG3N n8AerTMd5TEuQ4Hx6qimNPqeWYzEc1VUU9ZnPZ1lqu3dt0zRVTVExExicguTJB0hFM5gEgAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJnGCc9gSs11xat1Xa8zEeib123Zoiq9V iJnHRwviHjVfEa/J03w00/19J7x7AnjXHK9Z+q003KKZp+LmnG28TjE+7S89UU42n3nqp5tuWY36 pAjb3n1nqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiaaZ9Yn1jqkBOc046e8dW74LxuvRf qtRNyumKfhxOdtsZzPs0aebbljr1B6lbr863Tcjame09V5wXh7jVfD6/I1PxUVf09Z7R7u4s3aL1 E1WqsxE46AuiIz3InOQSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGd8IAqjMLc 3aaLVVVUxEUxMzmVdecYjrLjvE/F4qvxY0k1YiJivlqmnrEdsfUGH4l4j+nXJsWuSaaK883bbMYz n3aSZ3jlic+6quYmr4fTNX83dAFdXmY2mMTncAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AABNFXl57532QARVvPNE59m78N8S/QrkWLvJy1V83N23xHXPs0iaZ+KMdY3B6nTdpuWoqomKomIn acrlMYhx/hrjFPnxYvTVEYineqZ6RPbDr6es4jbsCoQnO+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAM7oqqxCKpxMessDjOrjQ6KurFVUzExE9cbT+QMHxNxSvSaeim1MeZczy7xnaY 7Y3cNXMxPNb3qq+bG/0XdVfu6i/Vcu3blcc0zRFVUzy59PRZjbONsgmYiMY77z9UAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVfLmPmAEUTiqJjaqHeeG+JzqrFdFWM28d47zLhMQva W/d016muzduW4iqJqiiqY5sevqD1KmrMJzu13BtXGu0VFWKqZiIiZ6Z2j82fTOZn1gFQAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjf2yTPpjIKL12mzTNdycUw4HxDxOdfVRRnbEfj7e7d +MuIeTaizb5Zq/eif8s+rjL0RERMZzkCImIxPZKZq5qac9oQAAAAAAAAAAAAAAAAAAAAAGYjrn+i Mx2iQSI39E5p9QAzT6o39ASIzHeJTmJ6Z/qAAAAAAAAAAAAAAAAAAAAAiYmYxHdKqKsU1e8A2vh7 ic6CqujO2J/D29nfWbtN6mK7c5pl5TaiJzM9cuz8G8Q86zVZucsVfuxH+afUHTiImZifUjPfGQSA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACnOKpWtTdp09uK6+84XKqvjiMd3IeL9dVVqqdP RMRFMRVnMTvmqAaDiesnX62q5mrlnGMzntH5MeYzXEGIiIiIxg/ezkEzGJQdwAAAAAAAAAAAAAAA AARVMxvicJoxV3wAJqiI/eiZXLFi7emOW1XjOMxTMgtbd5wTjtV9zfaLw9+kb36qopxnE0TG/wBr ZWPDukt/NHN9sfiDjs46zmE+Zb/hj7HfW+F6GjeNPv2nnq/Nd/QtN/7X+6QeeeZb/hj7EZz0nEPR P0LTf+1/ulaucL0Ne86ffvPPV+YOBjHer7jbtOXYX/DukufLHL9s/i1ut8Pfo+9iqqacZxFEzv8A aDQi7fsXbMzzWq8ZxmaZhbpiJ/eiJBAV4p75RTMzvicAkAAAAAAAAAAAAAAABMRmYQiesT6AmKcV zDI4XrJ0OuorzVyxnOJx2n82PG05RMZpqiesg9U016m9bmuneInCuJ5q4x2ch4P11VOqq09eKoqi aonMRvmmHX01fHMcuPcFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEzEdQWNZc8nS3rnem iqr7IeZ8R1Neq1N27VM555j75dP4w4jNq5Tp7VWapiqmqMesRjt7uTiO3frP1Ar2qlCKZmaYmeqQ AAAAAAAAAAAAAAAABOJxkiJmMwBz8kZqjNKvS2f0u7FFvFO+N9v76thwvhFzWU03bkfqas4nP1j1 z1h1uh0ljSRMWqN5nrmf77A0/D/DluImq/VzbRMYnP8AzDeWNJp9PTim1T/phdxPrnPb0U4BXMx2 iIj2gIiIjrkAAAAAImO8RMe8BMRMdcAs39Jp9RTiq1T/AKYaPiHhy3MRVYq5dpmczj/iG/wqxPrj Hb1B5zqrP6Jdmi5irfG2/wDfRRz88ZpjFL0DXaSxq4iLtG8T1zP993JcU4Rc0dNV23H6inGZz9I9 c9ZBqwnaMydsgAAAAAAAAAAAAAAAAJpjNUQhEzMRmOoL/DtTXpdTauUzOeeI++HpmjuedprNzvVR FX2w8tqjbHfrH1db4O4jNy5Vprs4qimmmmMekTnt7A6wImJ6AAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAFW0AiJzuZjrO0QjpRLX8c1P6Lwyu7mdojpOO8fmDhOM6qNZxGbkYxmOn0j8mHP7SZU10 zT8Uq4jNEVApjolEdEgAAAAAAAAAAAAAAAAV/rKvMp6dcd264Lwm7rYm7MTTTjG+Y9Pb3Y3BeH16 q5TXTjyuantGMZ32dtZtxprNFFmIjERnljlBFmzTboimiZmmPVdikjERsZBMoM5AAAAAAAAAEwgz gCaVm9Zi5bmmqZimfReyTidpBxvGuEXdFEXYiaqcY2zPr7ezS0R5dU3aunXD0q9bjUWa6L0RMTE4 5o5nEca4fXpblVVWPKmqrtGMZ22BrQAAAAAAAAAAAAAAAET0SiegJj9pEszg2qjR8Ri5OMZnr9J/ NiTGKJqUUUzV8UA9azHWN4kmcbtdwPU/pXDKLuZ3ies57z+TYdaIBUFO8AAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAABM4gRVvTII5fhmPVyXjPURNFizExtNUdfSaXWXKuSmqfSMvNuM6irU8RvZmcW7 teI+s/8AQMIAAAAAAAAAAAAAAAADOARM81cVem65pbU6zUxbxOImekZ/vooxy0/XZ0/hvh1Nv/1F WJ+Gmftifb3BvtBpKdDa5Kf76/mrqqnzJVZqqq5plVVid4jcCqMVSgzncAAAAAAAAAAAAAIjMiJn EZBEVTzQtazSU66jy6v7/vDKpxFMzMbrNE1U1zVEg861VqdHqZt4nEzHWMf31W4nlrmr13dR4k4d Tc/9RTiPhqn7Ij29nMY5qfpsAGcgAAAAAAAAAAAAAAAAOp8GanFF+zON5pjr6zU67l+GI9Hm3BtR Om4jZxnFy7RmPpP/AG9Jt1c9NNXrGQVROYyIp2hIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIq6 Aw+L3Zs8N1FecVRRViffEvNK6pm7XXM/tKpqq93d+Mb0WuEzHeqrH+2pweeaz74gAAAAAAAAAAAA AAAABExMxt1Smj5oBe0lEajU2beMxNdOY9su+0tqLWli3TGKeWmMfRyHhTTVXdbzb4pjP2TDtatu WATzTjGdlMREdEgIiMJAAAAAAAAAAAAABExExieiQETETGJVRMxGIQAs6q1F3SzbqjNPLVGPq4HV 0Rp9Tet4xEV1Yj2y9Ep35ocV4r01VrW82+Koz9syDURExG/VKa/mlAAAAAAAAAAAAAAAAAFurF2i uP8ADqiqn2emcJu+dw3T1x800U5n3xDzSMU2eu+Jd54PvRc4VEd6Zx/tpBvI6bCKPlhIAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAABPQAcn46ufqbFnHzV0znP80ORp+GZp69nQeMb3mauxG21NM/fU0E /Nn1AAAAAAAAAAAAAAAAARVOIylFfyyDsPCFjkov3M52qjp/K3UTz1THTDC4HR5Wmue9Ux90M6mM TM+oJAAAAAAAAAAAAAAAAAAABTM8lUR1y0vi+xz0WLmcbUx0/mbuqMzE+jB45R5umt+1UR90g4Km cxlKKPlhIAAAAAAAAAAAAAAAAKaozMU5x2dd4FuTNm/Z3+Guqc5/lhycfNn0b/wde8vV3423pqn7 6Qd1T0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnYHm3HLvn62mqM4i3HX6y10VRVOI7MrWznU f5PxYluPiqBUAAAAAAAAAAAAAAAAir5ZSir5ZB6Jo4imxiO9f4MjvTHdi6CefTzPpX+DK7xPoAAA AAAAAAAAAAAAAAAAAB3qjux9ZEVWMT2r/Bkd5n1Yuvnk08T61/gDz2n5YSin5YSAAAAAAAAAAAAA AAACJqimcT3bHgd3yNbVVOcTbnp9Ya25HxUsvRTjUf5PxB6gEbgAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAACm5tRKpTd+SQeW36oq1GYmJjk6x9VqjaqfdPer+VH8P0AAAAAAAAAAAAAAAAAU3PklUia eaMA73gtdNejuTExMc8xmJ74hnYny849Gg8I34uaG7b7xcmr7qXQ83NR9AQAAAAAAAAAAAAAAAAA AACMT5ecerB41XTRo7czMRHPEZme+JbDm5aPq57xdfi3obVvvNyKvuqByVv5IVIinljCQAAAAAAA AAAAAAAAAK96o9l2xVFOozMxEcnWfqtfxfRPen+UHq1veiFSm18kKgAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAFN35JVKbm9Eg8p71fyo/h+i7fpinUYiIiOTpH1WqN6p9gAAAAAAAAAAAAAAAACZ5dw mYpjMxEx6SDb+Fq5s8V8ntVRn/dEOzxiZj1eeaO9VZ11q9TM5iYjb0zl6BprsX9LRcxvy0z9oLgA AAAAAAAAAAAAAAAAAAIxmYj0cZ4prm9xXye1NGf90w7DU3YsaWu5jflqn7Hn+svVXtddvVTOZmY3 9M5BYiebcImKozEREekAAAAAAAAAAAAAAAAAH8X0T3p/lRXtVHuu2KYq1GJiJjk6T9QepWvkhUpt 7UQqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ3AHl+tjGo/yfixLc/FU2XHLXka2mmM4m3HX6y1 0UxTOY7gkAAAAAAAAAAAAAAABMU804lBE4kEW42mJ69XTeG+I/H5Fc7YiPsifZzVW85lc0t2rTXo u0RE1e/QHo4scO1NrWWJriqOb0iY9/yX6MTMxVsAExiQAAAAAAAAAAAAACIzOAAxmcUsfXaq3pbe aqoz7yDQ+JOI/H5FE7YmPtiPZzNyNoiOvVd1V2rU3pu1xEVe3Rbp2nMAmaeWcQgmcyAAAAAAAAAA AAAAAAApuT8VLL0UZ1H+T8WLNMVTmezY8DtefraqZziLc9PrAPSY2AAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAq6A4XxjZ8vV2J23ppj76mgn5sejrPHVuZs2L2/w10xjH80uRpnMzVjHcFQAAAAAA AAAAAAAAAAAAANlwHX1aXFFdVWJqj96fWXb6e7RfsU10T1iO3s83pnmsziN8Tu2fh7i1emqrt3Ke aIicTM49PYHbROYylRReou2ouUTT8X7sTlXTEzEzOwAU4nOZiMInbpuCRETmeiQAAAAARM4noCRE b9dk1YjGJicgIzjdNUTERMbrdd6i1aquVzTt2mcAuXLtFixXXXPSJ7ezhuMa+dVeqoomrHNV+9Pq q4/xavUVUW7dOImIzMTE+vs1cRyUc07zIAAAAAAAAAAAAAAAAAAAAEfNj1b/AMHWfM1d+dtqao++ lz9XwzFXXu67wLb/AFN+9n5q6oxj+WQdYEdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFfyyknp uDR+MLMXOFTPemc/7anBzimz03xD0vi1rzuG6iifmmirEe+JeZ3KcXa6J/w6ppq9gAAAAAAAAAAA AAAAAAAAATRVyRiVNVM55qJ5c/0TyxPVMVTTtTuDP4Zxa9oq486Zro7RmZ9ff3dnotbTr6Z8umaM e2P76vPasXIzX9i5o9Rd0tyKrVWPbEbg9H8rn6Tjl6+6ia+WcOb0PiWY+DUfBtERPXP2Q3+mv2NR RzU15n6SC9G+6SYxO3ygAIzAJEZhICJ23SRGZ3+UFMV804V+VydZzzdPZj6m/Y09HNVXifpLQa7x LM/Bp/j2mJnpj7YBvtbradBTHmUzXn2z/fRxnE+LXtbXPkzNFHeMzHp7+zE1mou6q5NV2rPtiNlu nFuM0fYCmmmc81c82P6qq6ueMQTVNW1WyOWI6AAAAAAAAAAAAAAAAAAAAAY5rPviXeeDrMWuExPe qrP+2lwlETN2iiP8SqKafd6Vwi3NnhunoiMVRRTmPfEAzaeiQAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAARVtCSYzGAU3Keemqn1jDzbjOnnTcRvZzi5drxP0n/t6TzfDM+jkfGemxRYvRjeap6es0g5 YAAAAAAAAAAAAAAAAAAAAAAAEx0nCq1XctVRMck4nPdREVT8sfXc5vWdwbzRcfmxtdt7YxmKf+2y seJNNVPxRVH2fm5LE9ZpiY9zb+CIB3Vvjugq28zEztvVTj/lc/8AK6L/AOTZ/wBdP5uA+H0j7Dmo 9fuB3/8A5XRf/Js/66fzW7nHdBTt5mZjbaqnH/LhOaj1+4+H0j7Addf8Saamfhiqfs/Nrdbx+b+1 q3tjGZp/7aTb+CJMT1imIj2BVdruXapmeSMznupnpGUc3pO5MVR80fTcAAAAAAAAAAAAAAAAAAAA AAAAGdwbTzqeI2cZxbu0Zn6z/wBPSbdPJTTT6RhyPgzTZov3pxtNM9PSanXc3wxPqCad4SRGIwAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFW8ACnrRLX8c036Vwyu1id4jpGe8fk2MRjYxHSd4kHktd U1fDKuJxRFLL4zpY0fEZtxjGY6fSPzYc/tJgER0SiOiQAAAAAAAAAAAAE05zttKCN+k4BM0xP19V M1eXvc+KPfZcsWrl67TRTNMZ7zl03DvDtu5EVamqK4mInGc9veAc7Y0d+9VHl0XIpzEbUTLoeH8A tVW4nUZ5pjvTMenu3tuxaszi1bpiP5YZE0bROQYlrRWNNZpotxG3vPr9WJxDgOm1Vqa5n46Y26z6 +7Z5iexTRMz8049Mg4PWcMv2Kpi3au3KYmY2tzs19c10Tiu1VTPvs9OroxEctNuY780MLUcP0V/P mWKM4xmmin8gefxNMxmK4qn+GE7fwurv+GNPcnm01VVFU9czERj+kMK/4cu24+G7T/WqfyBosR/B KMezPucK1FG/mW8fWfyWv0G9/Fb+2QYuPZOI/glk/oN7+K39srtvhWor38y3j6z+QMDb+FEzTEZm uKZ/hlv7Hhy7cj4rtP8ASqfyZtjwxp7c82pqqrqjpiYmMf1gHJUTXXOKLVVU+27YaPhl+/VEXLV2 3TMxG9ud3Y6fh+isY8uxRnGM1UU/kzaKMxPNTbiO3LANVw/gOm0tqK4n46o36x6e7Lu6KxqbNVFy I3959fqyKqJifmnHpkzEdgc7xDgFqm3M6fPNEdqZn193PX9Hfs1T5lFyaczG9Ew9GijaZyx7li1e nF23TMfywDznn839n8Me25FMR9XUcR8O27cTVpquSIiZxnHb2hzV+1cs3aqK5pnE9YyCnfvOZDGO s5AAAAAAAAAAAAAET0SiegKpnNE0qKKpp+GFUftIhmcG0saziMW5xjM9fpP5A7vgem/ReGUWsTtE 9Yx3n82w6UQnEdI2iCYzsCadoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJiJ6gDk/GPDpuXK dTajFUU1VVTn0iMd/ZyVM7Z79J+r1LWW/O01633qomn7YeZ8R01el1N23VE555n75BYiJiMT1Smq c1TKAAAAAAAAAExEYQnOwIlE7TG/9PVKui1VdqppopqqqmcRiM7goqjaMTifRt+D8Hq1cxc1NGLM daM/N17xPrDYcI4FNFHm6uqaKqo2iJx6T3h0lPyx1xHQGLodFa02fJp5f6zLKriZjdMThEzkDMoi IicwkBPNOcqZpiesJARERHRIAETgATzT6nNPqgBPNPqc0+qACZyAAiYieqQERTEdIVc05ygBExEz mU5kAKKcdGLrdFa1OPNp5v6zDKicJmcg4rjHB6tJM3NNRmzPSjPy9O8z6y1FMbTmcz6PS6vlnrie rm+L8CmujzdJVNdVMbxM59Z7QDl6d5nf+nolcqtVWqqqa6aqaonE5jG63PUEz0QZAAAAAAAAAEVR M0zEdUpo2qgCZ79+kfV1ng/h02rlWou05qmKaqZz6xOe/u5jh2mr1WptWqYnPPE/fD0zR2/J0tm3 3popp+yAX4iI6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoqp+OJ5sezkPGGhqp1VOoox VFURTMYiN81S6+Y5q5z2UamzTetxRVvETkHlcTmmJjuZ+LGGTxTRzotdXRirljGMxjtH5seZxXEg d5EzOZQAAAAAjKUz0gEIzPaMpjde09iu/dps0RVmZjOIzt0BbsUVXrsUWo5qvTo7TgvCqNHbrquz RduV4xE0R8GM9J3XeD8Ks6G3F3Gbs009cxvjfv7s+N5mqfmnqCYxy4qjOOmSnaJidwATE47IAAAA AAAAAAAAAAAAAAAAATM57IACreIiNiccuKYxnrgAarjXCqNZaoqtTTauUZzEUR8ecdZ2cXdoqt3Z ouxyVemcvSenxR80dGv4pwqzrbVVzH62KZ6ZnfG3f2Bwe8VYmEr2psV2NRXZrirNMzjMY2zhZnYE ZSmOkoAAAAARPWI9UpicTAIjecGYiJmZxgirNcyyOGaKdfrabeKuWc5xTntP5A3/AIQ0NVWqq1Fc REUxNOMRO+aZdfTT8cznut6a1Tp7c0Ud5yu4xVAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAROe2MkxMx7pAcx4x4f51qm9b5Yq/emf8sejjb1VM4inOcvVb1qm9TNFyM0y4HxDwydBVRXjb Efj7+wNVNOKafeFKImZjM90gAAAAEZq2jsFUTXMU2+sRmQXdJbm7ei3GOafX6Oz4VwmNDRNV6LdW o5tpjeMbe2esMXw9wqnS2vM1EfFPT7/SW8piYj4uoJiZ61dfuR3me8pAAAAAAAAAAAAAAAAAAAAA AAAAAAAAPfv2KZmneOv3ADWcW4TGupiuzFFOo5t5q2jG/tnrLjNXbm1em3OOaPT6PRaomY+Hq0fi HhVOqteZp4+KOv3esg5Gc07T3CmJomabnWYzAAAAAAqinNNXtClEzMRmOwFqYjMT1y7Pwbw/ybNV 65yzV+7Mdvmj0aTw9wydfVXXjbE/h7+7vrNqmzTFFuMUwCuI9cZN/bKQAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAFNUZmPWGBxnSRrtFXTmqmYiZiOmdp/NscboqpzAPLdVYu6a9VRetXL cRVMUzXTMc2PT1Wcw7vxJwydVYorpxm3ntHeYcHXGKpidqoBIU/LifmACdupHVNvFVyYq6RII747 +jo/DXCqq+a7e5rcVROObbMbT6NRwfQ16zVc+Pgiunrie/8A07yzR5dqiiP3aYp+wE3f11cU9Ip7 yuXJzVspAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVW5xVut2v1Nc09Yq7wqAcv4l4VVRy3bPNci mIzy74jefRznfHf0ekXqPMtV0T+9TNP2uD4xoa9HqufHwTXV0xHf/sGHG/QTcxTciKekyieoAJiY jOe+0fUETtjO2V7S2Luov027Vq5XHNEVzTTM8ufX0WqImJ5bm9VXy53+rufDPC69Jp66rsR5lzHN tGdpnvncGdwbSRodFRTmqqZiJmOuNo/Jn0xiZ9ZTTTiE43AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAxvlCQFNXWMzt3ch4l4PT5837MVRGJq2pmekR3y7CqcQortU3LU010xVExMbxk HldUfFOesbIb3xHwv9FuzetckRVVjl7b5npho6YjE43n3BCarfPiinrPpuptTzTzb/Dvhu/DGg83 XzeuzFdHzRTVvEZie2AdPwfS0aThsW4+eYnrtPWe39WTTGKYieqZ/V1Tnf09jOd/UAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAEVRmmYjqxuMaWjV8Nm3PzxEdN56x2/oys439CP1lUY29fcHmtNv kzRV1j12Q3XifQeVr4vWpiij5ppp2icRHbDRaiuaZiY/e3wCtNERNXxemKf5uyObNETMRE+zd+G+ GTrLkXr3JNNFeOXttic4x7gy/DHCIqvzf1cVYiImjmpmnrE98/R2NGcZnrKiLVNFqmmmIiKYiIxC 5TOYATjfIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiYzMEzPZMxkgFu5RRdpi LkZjr1cJxzglzh1+b9j4rdX0jpER3n3d+tX7XmWJt74n8weY2NLNzU2qbW/PXFE/SZd/o9PTpdHR TTHxxRTH2NdouA2eH6mm7ZqvVVf/AHmJjrn09m4jrmrYETHNyzUT126KrlXNGIUR0BIAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAEdd+hEcvNNKJ6K7dXLGJBj6zT06rR101R8c0VR9rz/AFdmbWou UXI+SqaI+kS9HnrmndqNdwK1xHUTdv1XaZ6fBMRHX3j3BpeA8HucRuxfvxy26em8T1zHafZ3Nmmi iiYt04jPqae35dmKI6R6roIjPciMZSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAiqcQROUowBMRPaGPetzjZkwAwaYx1J6sm5Z5p2nDHqpmmZjrgECIlMgCnPsmASAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAEImQTHUqjPRNNM1TEdMsi3Z5Z3nILdm3ON2RERHaEkgiZwUzmDCQAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFduJVgMO5RhRjZnVUxK1Xa 9IBixG6qU10THZTE+oJEJABAJAAAAAAAAAAAAAAAAAAAAEJABAEymFM7q6aKp7AiYVW6MrtFqc/F Gy9TTEApotxCsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAU1U5WblrGMMgBhzRMKN2bVRlart4iZBjpTVGFuagVgAAAAAAAAAAAAAAAAAAAIUxUuUxkFO6uK Jldot5iJXaaMAs27Wc5XqacKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAEVRlRNGVwyDGmz9fsW5tfVm5RNMSDC5ZhEzLN5IUTaiQYnXqnDImz6K Jte4LUYTsmbc+qPLn1A2Dy59U+XPqCDZPlz6o8ufUDZE4T5c+qYtz6gpwjp0Xote6uLPqDHiZTyz LJi1EK+SAYkWvquRZ+v2MiKYhOQW4owrpjCcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAxAAAAAAIxBywkBHLByx6JARyx6HLCQEcsk= ",
                )

                // Usar la capa de datos para insertar el alumno en la base de datos
                val datAlumno = DatAlumno()
                val resultado = datAlumno.insertarAlumno(alumno)

                // Mostrar el mensaje según el resultado
                Toast.makeText(this, resultado, Toast.LENGTH_SHORT).show()

                // Si la inserción fue exitosa, limpiar los campos
                if (resultado == "Alumno registrado exitosamente") {
                    limpiarCampos()
                    val intent = Intent(this, MainActivity::class.java)
                    startActivity(intent)
                }
            }
        }
    }

    // Función para limpiar los campos después de registrar al alumno
    private fun limpiarCampos() {
        etNombre.text.clear()
        etApellido.text.clear()
        etCorreo.text.clear()
        etContraseña.text.clear()
        etTelefono.text.clear()
    }
}
